<?php

/**
 * @file
 * Single Content Sync module functionality.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\ContentEntityTypeInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Template\Attribute;



/**
 * Implements hook_entity_type_build().
 */
function schwab_content_sync_entity_type_build(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  foreach ($entity_types as $entity_type) {
    // Support only content entities.
    if (!$entity_type instanceof ContentEntityTypeInterface) {
      continue;
    }

    // Depending on the configuration, media might have 2 canonical urls:
    // /media/{media} or /media/{media}/edit.
    if ($entity_type->id() === 'media') {
      $entity_type->setLinkTemplate('single-content:export', '/media/{media}/export');
    }
    elseif ($entity_type->hasLinkTemplate('canonical')) {
      $export_path = $entity_type->getLinkTemplate('canonical') . '/export';
      $entity_type->setLinkTemplate('single-content:export', $export_path);
    }
  }
}

/**
 * Implements hook_entity_operation().
 */
function schwab_content_sync_entity_operation(EntityInterface $entity) {
  $operations = [];

  if (\Drupal::service('schwab_content_sync.helper')->access($entity)) {
    $operations['export'] = [
      'title' => t('Export'),
      'weight' => 50,
      'url' => $entity->toUrl('single-content:export'),
    ];
  }

  return $operations;
}

/**
 * Implements hook_preprocess_HOOK() for links__dropbutton__operations.
 */
function schwab_content_sync_preprocess_links__dropbutton__operations(&$variables) {
  $entity = NULL;

  foreach ($variables['links'] as $type => &$link_data) {
    if (!isset($link_data['link']['#url'])) {
      continue;
    }

    /** @var \Drupal\Core\Url $url */
    $url = $link_data['link']['#url'];

    if ($type === 'edit') {
      $entity = $url->getOption('entity');
    }

    if (empty($link_data['link']['#options']['query']['destination'])) {
      continue;
    }

    /** @var \Drupal\Core\Url $url */
    $url = $link_data['link']['#url'];
    $entity_type_id = $url->getOption('entity_type');

    if (!$entity_type_id) {
      continue;
    }

    $route_name = "entity.{$entity_type_id}.single_content:export";

    // Remove destination parameter from the query of the export link.
    if ($link_data['link']['#url']->getRouteName() === $route_name) {
      unset($link_data['link']['#options']['query']['destination']);
    }
  }

  // Add custom export operation here if it was not added in the
  // hook_entity_operation.
  if ($entity instanceof EntityInterface && !isset($variables['links']['export']) && \Drupal::service('schwab_content_sync.helper')->access($entity)) {
    $variables['links']['export'] = [
      'text' => t('Export'),
      'link' => $entity->toLink(t('Export'), 'single-content:export')->toRenderable(),
      'attributes' => new Attribute([
        'class' => ['export', 'dropbutton__item'],
      ]),
    ];
    $variables['attributes']['class'][] = 'dropbutton--multiple';
  }

}

/**
 * Implements hook_entity_access().
 */
function schwab_content_sync_entity_access($entity, $operation, $account) {
  if ($operation === 'single-content:export') {
    return AccessResult::allowedIfHasPermissions($account, [
      'export single content',
      "export {$entity->getEntityTypeId()} content",
    ], 'OR');
  }
}
